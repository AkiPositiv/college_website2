// form_handler.js
// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ä–º—ã –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram

document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('admissionContactForm');
    const formMessage = document.getElementById('form-message');

    // –ü–µ—Ä–µ–≤–æ–¥—ã –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π —Ñ–æ—Ä–º—ã
    const translations = {
        ru: {
            form_success_message: '–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!',
            form_error_message: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'
        },
        uz: {
            form_success_message: 'Xabaringiz muvaffaqiyatli yuborildi!',
            form_error_message: 'Yuborishda xatolik. Keyinroq urinib ko\'ring.'
        },
        en: {
            form_success_message: 'Your message has been sent successfully!',
            form_error_message: 'An error occurred while sending the message.'
        }
    };

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â–∏–π —è–∑—ã–∫
    const getLang = () => localStorage.getItem('selectedLang') || 'ru';

    if (form) {
        form.addEventListener('submit', async (e) => {
            e.preventDefault(); // –ë–ª–æ–∫–∏—Ä—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É

            // –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
            const formData = new FormData(form);
            const data = {};
            formData.forEach((value, key) => {
                data[key] = value.trim() || '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
            });

            // –§–æ—Ä–º–∏—Ä—É–µ–º –∫—Ä–∞—Å–∏–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è Telegram
            const message = `
üì¨ <b>–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–∞</b>

üë®‚Äçüéì <b>–§–ò–û:</b> ${escapeHtml(data.fullName)}
üìß <b>Email:</b> ${escapeHtml(data.email)}
üìû <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> ${escapeHtml(data.phone)}
üí¨ <b>–°–æ–æ–±—â–µ–Ω–∏–µ:</b>
${escapeHtml(data.message)}

‚è± <i>${new Date().toLocaleString('ru-RU')}</i>
            `.trim();

            // === –ù–ê–°–¢–†–û–ô–ö–ò: –ó–∞–º–µ–Ω–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏—è –Ω–∏–∂–µ ===
            const BOT_TOKEN = '7042630684:AAHXZ5In4ME6XQnATJJG__aJbu8NeXvi4mo'; // ‚Üê –í–∞—à —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
            const CHAT_ID = '@priyemnaya_politexa'; // ‚Üê ID –≥—Ä—É–ø–ø—ã –∏–ª–∏ –ª–∏—á–Ω—ã–π ID (–Ω–∞–ø—Ä–∏–º–µ—Ä: 123456789) –ò–õ–ò @username
            // ========================================

            const TELEGRAM_API_URL = `https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`;

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º "–û—Ç–ø—Ä–∞–≤–∫–∞..."
            formMessage.textContent = '–û—Ç–ø—Ä–∞–≤–∫–∞...';
            formMessage.className = 'form-message info';
            formMessage.style.display = 'block';

            try {
                const response = await fetch(TELEGRAM_API_URL, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        chat_id: CHAT_ID,
                        text: message,
                        parse_mode: 'HTML',
                        disable_web_page_preview: true
                    })
                });

                const result = await response.json();

                if (result.ok) {
                    // –£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ
                    formMessage.textContent = translations[getLang()].form_success_message;
                    formMessage.className = 'form-message success';
                    form.reset();
                } else {
                    // –û—à–∏–±–∫–∞ –æ—Ç Telegram
                    console.error('Telegram API error:', result);
                    formMessage.textContent = `–û—à–∏–±–∫–∞: ${result.description}`;
                    formMessage.className = 'form-message error';
                }
            } catch (error) {
                // –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –∏–ª–∏ –∑–∞–ø—Ä–æ—Å–∞
                console.error('Fetch error:', error);
                formMessage.textContent = translations[getLang()].form_error_message;
                formMessage.className = 'form-message error';
            }

            // –°–∫—Ä—ã—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
            setTimeout(() => {
                formMessage.style.display = 'none';
            }, 5000);
        });
    }

    // –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º HTML, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –∏–Ω—ä–µ–∫—Ü–∏–π
    function escapeHtml(text) {
        const div = document.createElement('div');
        div.textContent = text;
        return div.innerHTML;
    }
});
